// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.17.3
// source: gloria.proto

// protoc --proto_path=protobuf/gloria --go_out=gloria_pb protobuf/gloria/gloria.proto

package gloria_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// All GNSS Marks.  Use Mark.Code for the map key.
type Marks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marks map[string]*Mark `protobuf:"bytes,1,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Marks) Reset() {
	*x = Marks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gloria_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Marks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Marks) ProtoMessage() {}

func (x *Marks) ProtoReflect() protoreflect.Message {
	mi := &file_gloria_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Marks.ProtoReflect.Descriptor instead.
func (*Marks) Descriptor() ([]byte, []int) {
	return file_gloria_proto_rawDescGZIP(), []int{0}
}

func (x *Marks) GetMarks() map[string]*Mark {
	if x != nil {
		return x.Marks
	}
	return nil
}

// A GNSS Mark.
type Mark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Code used to uniquely identify the GNSS Mark e.g. TAUP
	// teqc param: -O.mo
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// ITRF DOMES number e.g., 50217M001
	// teqc param: -O.mn
	DomesNumber      string              `protobuf:"bytes,2,opt,name=domes_number,json=domesNumber,proto3" json:"domes_number,omitempty"`
	Point            *Point              `protobuf:"bytes,3,opt,name=point,proto3" json:"point,omitempty"`
	DeployedReceiver []*DeployedReceiver `protobuf:"bytes,4,rep,name=deployed_receiver,json=deployedReceiver,proto3" json:"deployed_receiver,omitempty"`
	InstalledAntenna []*InstalledAntenna `protobuf:"bytes,5,rep,name=installed_antenna,json=installedAntenna,proto3" json:"installed_antenna,omitempty"`
	InstalledRadome  []*InstalledRadome  `protobuf:"bytes,6,rep,name=installed_radome,json=installedRadome,proto3" json:"installed_radome,omitempty"`
	Comment          string              `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	Download         *Download           `protobuf:"bytes,8,opt,name=download,proto3" json:"download,omitempty"`
	Distribution     *Distribution       `protobuf:"bytes,9,opt,name=distribution,proto3" json:"distribution,omitempty"`
	Span             *Span               `protobuf:"bytes,10,opt,name=span,proto3" json:"span,omitempty"`
}

func (x *Mark) Reset() {
	*x = Mark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gloria_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mark) ProtoMessage() {}

func (x *Mark) ProtoReflect() protoreflect.Message {
	mi := &file_gloria_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mark.ProtoReflect.Descriptor instead.
func (*Mark) Descriptor() ([]byte, []int) {
	return file_gloria_proto_rawDescGZIP(), []int{1}
}

func (x *Mark) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Mark) GetDomesNumber() string {
	if x != nil {
		return x.DomesNumber
	}
	return ""
}

func (x *Mark) GetPoint() *Point {
	if x != nil {
		return x.Point
	}
	return nil
}

func (x *Mark) GetDeployedReceiver() []*DeployedReceiver {
	if x != nil {
		return x.DeployedReceiver
	}
	return nil
}

func (x *Mark) GetInstalledAntenna() []*InstalledAntenna {
	if x != nil {
		return x.InstalledAntenna
	}
	return nil
}

func (x *Mark) GetInstalledRadome() []*InstalledRadome {
	if x != nil {
		return x.InstalledRadome
	}
	return nil
}

func (x *Mark) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Mark) GetDownload() *Download {
	if x != nil {
		return x.Download
	}
	return nil
}

func (x *Mark) GetDistribution() *Distribution {
	if x != nil {
		return x.Distribution
	}
	return nil
}

func (x *Mark) GetSpan() *Span {
	if x != nil {
		return x.Span
	}
	return nil
}

// A geographical point on NZGD2000
type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Latitude - geographical latitude of the point for the given datum.
	// teqc param: -O.pg[1]
	Latitude float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// Longitude - geographical longitude of the point for the given datum.
	// teqc param: -O.pg[2]
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// Elevation - Height in meters of the point for the given datum.
	// teqc param: -O.pg[3]
	Elevation float64 `protobuf:"fixed64,3,opt,name=elevation,proto3" json:"elevation,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gloria_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_gloria_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_gloria_proto_rawDescGZIP(), []int{2}
}

func (x *Point) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Point) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Point) GetElevation() float64 {
	if x != nil {
		return x.Elevation
	}
	return 0
}

// A time span that has a start and and end.
type Span struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Start - time in Unix seconds.
	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	// End - time in Unix seconds.  A future date of 9999-01-01T00:00:00Z is used to indicate still open.
	End int64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Span) Reset() {
	*x = Span{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gloria_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Span) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Span) ProtoMessage() {}

func (x *Span) ProtoReflect() protoreflect.Message {
	mi := &file_gloria_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Span.ProtoReflect.Descriptor instead.
func (*Span) Descriptor() ([]byte, []int) {
	return file_gloria_proto_rawDescGZIP(), []int{3}
}

func (x *Span) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Span) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

// A GNSS receiver.
type Receiver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The receiver model e.g., TRIMBLE NETR9
	// teqc param: -O.rt
	Model string `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// The receiver serial number e.g., 5033K69574
	// teqc param: -O.rn
	SerialNumber string      `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Firmware     []*Firmware `protobuf:"bytes,3,rep,name=firmware,proto3" json:"firmware,omitempty"`
}

func (x *Receiver) Reset() {
	*x = Receiver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gloria_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receiver) ProtoMessage() {}

func (x *Receiver) ProtoReflect() protoreflect.Message {
	mi := &file_gloria_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receiver.ProtoReflect.Descriptor instead.
func (*Receiver) Descriptor() ([]byte, []int) {
	return file_gloria_proto_rawDescGZIP(), []int{4}
}

func (x *Receiver) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Receiver) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *Receiver) GetFirmware() []*Firmware {
	if x != nil {
		return x.Firmware
	}
	return nil
}

// Firmware versions
type Firmware struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The firmware version e.g., 5.15
	// teqc param: -O.rv
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Span    *Span  `protobuf:"bytes,2,opt,name=span,proto3" json:"span,omitempty"`
}

func (x *Firmware) Reset() {
	*x = Firmware{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gloria_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Firmware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Firmware) ProtoMessage() {}

func (x *Firmware) ProtoReflect() protoreflect.Message {
	mi := &file_gloria_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Firmware.ProtoReflect.Descriptor instead.
func (*Firmware) Descriptor() ([]byte, []int) {
	return file_gloria_proto_rawDescGZIP(), []int{5}
}

func (x *Firmware) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Firmware) GetSpan() *Span {
	if x != nil {
		return x.Span
	}
	return nil
}

// A GNSS antenna
type Antenna struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The antenna model TRM57971.00
	// teqc param: -O.at[1]
	Model string `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// The antenna serial number e.g., 1441031450
	// teqc param: -O.an
	SerialNumber string `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
}

func (x *Antenna) Reset() {
	*x = Antenna{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gloria_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Antenna) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Antenna) ProtoMessage() {}

func (x *Antenna) ProtoReflect() protoreflect.Message {
	mi := &file_gloria_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Antenna.ProtoReflect.Descriptor instead.
func (*Antenna) Descriptor() ([]byte, []int) {
	return file_gloria_proto_rawDescGZIP(), []int{6}
}

func (x *Antenna) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Antenna) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

// An antenna radome
type Radome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The radome model
	// teqc param: -O.at[2]
	Model string `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *Radome) Reset() {
	*x = Radome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gloria_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Radome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Radome) ProtoMessage() {}

func (x *Radome) ProtoReflect() protoreflect.Message {
	mi := &file_gloria_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Radome.ProtoReflect.Descriptor instead.
func (*Radome) Descriptor() ([]byte, []int) {
	return file_gloria_proto_rawDescGZIP(), []int{7}
}

func (x *Radome) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

// Offset for an installed antenna
type Offset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The vertical offset in m e.g., 0.0550
	// teqc param: -O.pe[1]
	Vertical float64 `protobuf:"fixed64,1,opt,name=vertical,proto3" json:"vertical,omitempty"`
	// The offset north in m e.g., 0.0
	// teqc param: -O.pe[2]
	North float64 `protobuf:"fixed64,2,opt,name=north,proto3" json:"north,omitempty"`
	// The offset east in m e.g., 0.0
	// teqc param: -O.pe[3]
	East float64 `protobuf:"fixed64,3,opt,name=east,proto3" json:"east,omitempty"`
}

func (x *Offset) Reset() {
	*x = Offset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gloria_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Offset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offset) ProtoMessage() {}

func (x *Offset) ProtoReflect() protoreflect.Message {
	mi := &file_gloria_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offset.ProtoReflect.Descriptor instead.
func (*Offset) Descriptor() ([]byte, []int) {
	return file_gloria_proto_rawDescGZIP(), []int{8}
}

func (x *Offset) GetVertical() float64 {
	if x != nil {
		return x.Vertical
	}
	return 0
}

func (x *Offset) GetNorth() float64 {
	if x != nil {
		return x.North
	}
	return 0
}

func (x *Offset) GetEast() float64 {
	if x != nil {
		return x.East
	}
	return 0
}

type InstalledAntenna struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Antenna *Antenna `protobuf:"bytes,1,opt,name=antenna,proto3" json:"antenna,omitempty"`
	Offset  *Offset  `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Span    *Span    `protobuf:"bytes,3,opt,name=span,proto3" json:"span,omitempty"`
}

func (x *InstalledAntenna) Reset() {
	*x = InstalledAntenna{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gloria_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstalledAntenna) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstalledAntenna) ProtoMessage() {}

func (x *InstalledAntenna) ProtoReflect() protoreflect.Message {
	mi := &file_gloria_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstalledAntenna.ProtoReflect.Descriptor instead.
func (*InstalledAntenna) Descriptor() ([]byte, []int) {
	return file_gloria_proto_rawDescGZIP(), []int{9}
}

func (x *InstalledAntenna) GetAntenna() *Antenna {
	if x != nil {
		return x.Antenna
	}
	return nil
}

func (x *InstalledAntenna) GetOffset() *Offset {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *InstalledAntenna) GetSpan() *Span {
	if x != nil {
		return x.Span
	}
	return nil
}

type DeployedReceiver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver *Receiver `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Span     *Span     `protobuf:"bytes,2,opt,name=span,proto3" json:"span,omitempty"`
}

func (x *DeployedReceiver) Reset() {
	*x = DeployedReceiver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gloria_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployedReceiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployedReceiver) ProtoMessage() {}

func (x *DeployedReceiver) ProtoReflect() protoreflect.Message {
	mi := &file_gloria_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployedReceiver.ProtoReflect.Descriptor instead.
func (*DeployedReceiver) Descriptor() ([]byte, []int) {
	return file_gloria_proto_rawDescGZIP(), []int{10}
}

func (x *DeployedReceiver) GetReceiver() *Receiver {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *DeployedReceiver) GetSpan() *Span {
	if x != nil {
		return x.Span
	}
	return nil
}

type InstalledRadome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Radome *Radome `protobuf:"bytes,1,opt,name=radome,proto3" json:"radome,omitempty"`
	Span   *Span   `protobuf:"bytes,2,opt,name=span,proto3" json:"span,omitempty"`
}

func (x *InstalledRadome) Reset() {
	*x = InstalledRadome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gloria_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstalledRadome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstalledRadome) ProtoMessage() {}

func (x *InstalledRadome) ProtoReflect() protoreflect.Message {
	mi := &file_gloria_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstalledRadome.ProtoReflect.Descriptor instead.
func (*InstalledRadome) Descriptor() ([]byte, []int) {
	return file_gloria_proto_rawDescGZIP(), []int{11}
}

func (x *InstalledRadome) GetRadome() *Radome {
	if x != nil {
		return x.Radome
	}
	return nil
}

func (x *InstalledRadome) GetSpan() *Span {
	if x != nil {
		return x.Span
	}
	return nil
}

type Download struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The download priority, 0 for lowest, higher numbers for higher priority.
	Priority int64 `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
	// Download rate limit in KBytes/sec. 0 = no limit.
	Rate int64 `protobuf:"varint,2,opt,name=rate,proto3" json:"rate,omitempty"`
	// Whether or not the site is a third party site
	ThirdParty bool `protobuf:"varint,3,opt,name=third_party,json=thirdParty,proto3" json:"third_party,omitempty"`
}

func (x *Download) Reset() {
	*x = Download{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gloria_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Download) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Download) ProtoMessage() {}

func (x *Download) ProtoReflect() protoreflect.Message {
	mi := &file_gloria_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Download.ProtoReflect.Descriptor instead.
func (*Download) Descriptor() ([]byte, []int) {
	return file_gloria_proto_rawDescGZIP(), []int{12}
}

func (x *Download) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Download) GetRate() int64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *Download) GetThirdParty() bool {
	if x != nil {
		return x.ThirdParty
	}
	return false
}

type Distribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Set true if data should be sent to the IGS
	Igs bool `protobuf:"varint,1,opt,name=igs,proto3" json:"igs,omitempty"`
	// Set true if this site belongs to LINZ
	Linz bool `protobuf:"varint,2,opt,name=linz,proto3" json:"linz,omitempty"`
}

func (x *Distribution) Reset() {
	*x = Distribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gloria_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Distribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Distribution) ProtoMessage() {}

func (x *Distribution) ProtoReflect() protoreflect.Message {
	mi := &file_gloria_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Distribution.ProtoReflect.Descriptor instead.
func (*Distribution) Descriptor() ([]byte, []int) {
	return file_gloria_proto_rawDescGZIP(), []int{13}
}

func (x *Distribution) GetIgs() bool {
	if x != nil {
		return x.Igs
	}
	return false
}

func (x *Distribution) GetLinz() bool {
	if x != nil {
		return x.Linz
	}
	return false
}

var File_gloria_proto protoreflect.FileDescriptor

var file_gloria_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x67, 0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x67, 0x6c, 0x6f, 0x72, 0x69, 0x61, 0x22, 0x7f, 0x0a, 0x05, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12,
	0x2e, 0x0a, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x67, 0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x1a,
	0x46, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x67, 0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd8, 0x03, 0x0a, 0x04, 0x4d, 0x61, 0x72, 0x6b,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x6d, 0x65, 0x73, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x6d, 0x65,
	0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x11,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6c, 0x6f, 0x72, 0x69, 0x61,
	0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x5f, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x67, 0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65,
	0x64, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x65, 0x64, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x12, 0x42, 0x0a, 0x10, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x64, 0x6f, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x61, 0x64, 0x6f, 0x6d, 0x65, 0x52, 0x0f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x61, 0x64, 0x6f, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6c, 0x6f,
	0x72, 0x69, 0x61, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x08, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x38, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x04, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x67, 0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x04, 0x73, 0x70,
	0x61, 0x6e, 0x22, 0x5f, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x04, 0x53, 0x70, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x22, 0x73, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x08, 0x66, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67,
	0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x08,
	0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x22, 0x46, 0x0a, 0x08, 0x46, 0x69, 0x72, 0x6d,
	0x77, 0x61, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x04, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67,
	0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x04, 0x73, 0x70, 0x61, 0x6e,
	0x22, 0x44, 0x0a, 0x07, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x1e, 0x0a, 0x06, 0x52, 0x61, 0x64, 0x6f, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x4e, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x72, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6e, 0x6f, 0x72,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x65, 0x61, 0x73, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x65, 0x64, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x12, 0x29, 0x0a, 0x07, 0x61,
	0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67,
	0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x52, 0x07, 0x61,
	0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x12, 0x26, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x20,
	0x0a, 0x04, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67,
	0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x04, 0x73, 0x70, 0x61, 0x6e,
	0x22, 0x62, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x67, 0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x04,
	0x73, 0x70, 0x61, 0x6e, 0x22, 0x5b, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65,
	0x64, 0x52, 0x61, 0x64, 0x6f, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x6f, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6c, 0x6f, 0x72, 0x69, 0x61,
	0x2e, 0x52, 0x61, 0x64, 0x6f, 0x6d, 0x65, 0x52, 0x06, 0x72, 0x61, 0x64, 0x6f, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x04, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x67, 0x6c, 0x6f, 0x72, 0x69, 0x61, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x04, 0x73, 0x70, 0x61,
	0x6e, 0x22, 0x5b, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x22, 0x34,
	0x0a, 0x0c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x69, 0x67, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x7a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x7a, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x67, 0x6c, 0x6f, 0x72, 0x69, 0x61,
	0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gloria_proto_rawDescOnce sync.Once
	file_gloria_proto_rawDescData = file_gloria_proto_rawDesc
)

func file_gloria_proto_rawDescGZIP() []byte {
	file_gloria_proto_rawDescOnce.Do(func() {
		file_gloria_proto_rawDescData = protoimpl.X.CompressGZIP(file_gloria_proto_rawDescData)
	})
	return file_gloria_proto_rawDescData
}

var file_gloria_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_gloria_proto_goTypes = []interface{}{
	(*Marks)(nil),            // 0: gloria.Marks
	(*Mark)(nil),             // 1: gloria.Mark
	(*Point)(nil),            // 2: gloria.Point
	(*Span)(nil),             // 3: gloria.Span
	(*Receiver)(nil),         // 4: gloria.Receiver
	(*Firmware)(nil),         // 5: gloria.Firmware
	(*Antenna)(nil),          // 6: gloria.Antenna
	(*Radome)(nil),           // 7: gloria.Radome
	(*Offset)(nil),           // 8: gloria.Offset
	(*InstalledAntenna)(nil), // 9: gloria.InstalledAntenna
	(*DeployedReceiver)(nil), // 10: gloria.DeployedReceiver
	(*InstalledRadome)(nil),  // 11: gloria.InstalledRadome
	(*Download)(nil),         // 12: gloria.Download
	(*Distribution)(nil),     // 13: gloria.Distribution
	nil,                      // 14: gloria.Marks.MarksEntry
}
var file_gloria_proto_depIdxs = []int32{
	14, // 0: gloria.Marks.marks:type_name -> gloria.Marks.MarksEntry
	2,  // 1: gloria.Mark.point:type_name -> gloria.Point
	10, // 2: gloria.Mark.deployed_receiver:type_name -> gloria.DeployedReceiver
	9,  // 3: gloria.Mark.installed_antenna:type_name -> gloria.InstalledAntenna
	11, // 4: gloria.Mark.installed_radome:type_name -> gloria.InstalledRadome
	12, // 5: gloria.Mark.download:type_name -> gloria.Download
	13, // 6: gloria.Mark.distribution:type_name -> gloria.Distribution
	3,  // 7: gloria.Mark.span:type_name -> gloria.Span
	5,  // 8: gloria.Receiver.firmware:type_name -> gloria.Firmware
	3,  // 9: gloria.Firmware.span:type_name -> gloria.Span
	6,  // 10: gloria.InstalledAntenna.antenna:type_name -> gloria.Antenna
	8,  // 11: gloria.InstalledAntenna.offset:type_name -> gloria.Offset
	3,  // 12: gloria.InstalledAntenna.span:type_name -> gloria.Span
	4,  // 13: gloria.DeployedReceiver.receiver:type_name -> gloria.Receiver
	3,  // 14: gloria.DeployedReceiver.span:type_name -> gloria.Span
	7,  // 15: gloria.InstalledRadome.radome:type_name -> gloria.Radome
	3,  // 16: gloria.InstalledRadome.span:type_name -> gloria.Span
	1,  // 17: gloria.Marks.MarksEntry.value:type_name -> gloria.Mark
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_gloria_proto_init() }
func file_gloria_proto_init() {
	if File_gloria_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gloria_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Marks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gloria_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gloria_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gloria_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Span); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gloria_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receiver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gloria_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Firmware); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gloria_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Antenna); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gloria_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Radome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gloria_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Offset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gloria_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstalledAntenna); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gloria_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployedReceiver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gloria_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstalledRadome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gloria_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Download); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gloria_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Distribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gloria_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gloria_proto_goTypes,
		DependencyIndexes: file_gloria_proto_depIdxs,
		MessageInfos:      file_gloria_proto_msgTypes,
	}.Build()
	File_gloria_proto = out.File
	file_gloria_proto_rawDesc = nil
	file_gloria_proto_goTypes = nil
	file_gloria_proto_depIdxs = nil
}
